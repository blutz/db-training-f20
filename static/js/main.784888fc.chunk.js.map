{"version":3,"sources":["CodeChallenge.module.css","Home.js","CodeDemo.js","CodeChallenge.js","HTMLPage.js","CSSPage.js","App.js","reportWebVitals.js","index.js","CodeDemo.module.css"],"names":["module","exports","Home","CodeDemo","initialCode","editable","useState","code","setCode","className","styles","wrapper","editorContainer","title","editor","value","onBeforeChange","_","__","options","mode","theme","lineNumbers","lineWrapping","resultContainer","srcDoc","result","CodeChallenge","description","descriptionImg","hint","solution","solutionDescription","solutionShown","setSolutionShown","style","container","display","flex","maxWidth","src","alt","onClick","HTMLPage","process","href","target","rel","CSSPage","App","exact","to","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.784888fc.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"CodeChallenge_container__OrRtk\"};","import React from 'react'\n\nfunction Home() {\n  return <div>Homepage</div>\n}\n\nexport default Home\n","import React, { useState } from 'react'\nimport { Controlled as CodeMirror } from 'react-codemirror2'\nimport styles from './CodeDemo.module.css'\nimport 'codemirror/mode/htmlmixed/htmlmixed'\nimport 'codemirror/lib/codemirror.css'\nimport 'codemirror/theme/dracula.css'\n\nfunction CodeDemo({initialCode, editable=true}) {\n  const [code, setCode] = useState(initialCode || '')\n  return <div className={styles.wrapper}>\n    <div className={styles.editorContainer}>\n      <div className={styles.title}>Editor</div>\n      <CodeMirror\n        className={styles.editor}\n        value={code}\n        onBeforeChange={(_, __, value) => {\n          if(editable) { setCode(value) }\n        }}\n        options={{\n          mode: 'htmlmixed',\n          theme: 'dracula',\n          lineNumbers: true,\n          lineWrapping: true,\n        }}\n      />\n    </div>\n    <div className={styles.resultContainer}>\n      <div className={styles.title}>Result</div>\n      <iframe srcDoc={code} title='result' className={styles.result}></iframe>\n    </div>\n  </div>\n}\n\nexport default CodeDemo\n","import React, { useState } from 'react'\nimport ReactSpoiler from 'react-spoiler'\nimport CodeDemo from './CodeDemo'\nimport style from './CodeChallenge.module.css'\n\nfunction CodeChallenge({title, description, descriptionImg, hint, initialCode, solution, solutionDescription}) {\n  const [solutionShown, setSolutionShown] = useState(false)\n  return <section className={style.container}>\n    <h3>{title}</h3>\n    <div style={{display: 'flex'}}>\n      <p style={{flex: 1}}>{description}</p>\n      {descriptionImg && <div style={{flex: 0.5, maxWidth: '50%'}}>\n        <img src={descriptionImg} alt='Sample' style={{maxWidth: '100%'}} />\n      </div>}\n    </div>\n    {hint && <div><strong>Hint:</strong>&nbsp;\n      <ReactSpoiler className='spoiler'>{hint}</ReactSpoiler>\n    </div>}\n    <CodeDemo initialCode={initialCode || ''} />\n    <button onClick={() => setSolutionShown(!solutionShown)}>{solutionShown ? 'Hide' : 'Show'} sample solution</button>\n    {solutionShown && <div>\n      <CodeDemo initialCode={solution} editable={false} />\n      <p>{solutionDescription}</p>\n    </div>}\n  </section>\n}\n\nexport default CodeChallenge\n","import React, { Fragment } from 'react'\nimport CodeChallenge from './CodeChallenge'\n\nfunction HTMLPage() {\n  return <Fragment>\n    <h2>HTML Exercises</h2>\n    <CodeChallenge\n      title='1: Link to a new tab'\n      description='Make a link to the Daily Bruin homepage that opens in a new tab (and is secure!)'\n      hint={<Fragment>Remember to use <code>noopener</code> and <code>noreferrer</code></Fragment>}\n      solution={`<a href='https://dailybruin.com' target='_blank' rel='noopener noreferrer'>Go to Daily Bruin</a>`}\n      solutionDescription={<Fragment><code>target='_blank'</code> means open the link in a new tab. <code>rel='noopener noreferrer'</code> makes sure that the website, in this case dailybruin.com, cannot gain access or control this page.</Fragment>}\n    />\n\n\n    <CodeChallenge\n      title='2: Page skeleton'\n      description='Write out the basic page skeleton for any HTML5 page'\n      hint='Be sure to include doctype, title, and charset'\n      solution={`<!doctype html>\n<html>\n<head>\n  <meta charset='utf-8'>\n  <title>Page title goes here</title>\n</head>\n<body>\n  Content goes here\n</body>\n</html>\n`}\n    />\n\n    <CodeChallenge\n      title='3: News article'\n      description='As shown in the image, make a news article with a title, image, byline, and a paragraph. You can grab text/images from dailybruin.com'\n      descriptionImg={`${process.env.PUBLIC_URL}/img/news-article-demo.jpg`}\n      solution={`<h1>In-person instructors experience excitement, hesitation ahead of return to campus</h1>\n<img src='https://wp.dailybruin.com/images/2020/09/web.news_.inpersoncourses.CQ_.Benny_.jpg' alt='mask photo illustration' width='200'/>\n<p><strong>By Bobby Hekel</strong></p>\n<p>Darah Wilson said she is prepared for the fall and what it entails for her: being one of the first instructors at UCLA to return to in-person instruction.</p>`}\n    />\n\n    <CodeChallenge\n      title='4: Headings'\n      description='Make consecutive headings 1-6 with a horizontal rule through each one. Link h1 to DailyBruin.com'\n      solution={`<h1><a href='https://dailybruin.com'>Heading 1</a></h1>\n<hr />\n<h2>Heading 2</h2>\n<hr />\n<h3>Heading 3</h3>\n<hr />\n<h4>Heading 4</h4>\n<hr />\n<h5>Heading 5</h5>\n<hr />\n<h6>Heading 6</h6>`}\n    />\n\n    <CodeChallenge\n      title='5: Lists'\n      description='Make a REVERSED ordered list with links to your top 5 favorite websites. Highlight your number one website'\n      hint={<Fragment>You may need to use <a href='https://developer.mozilla.org/en-US/docs/Web/HTML/Element/ol' target='_blank' rel='noopener noreferrer'>the MDN reference for <code>ol</code></a> to find how to reverse a list</Fragment>}\n      solution={`<ol reversed>\n  <li><a href='https://www.unicamp.org'>UCLA UniCamp</a></li>\n  <li><a href='https://ucla.edu'>UCLA</a></li>\n  <li><a href='https://wikipedia.org'>Wikipedia</a></li>\n  <li><a href='https://developer.mozilla.org/en-US/'>MDN Web Docs</a></li>\n  <li><mark><a href='https://dailybruin.com'>Daily Bruin</a></mark></li>\n</ol>`}\n    />\n\n    <CodeChallenge\n      title='6: Favorite quote'\n      description={<Fragment>Use <code>blockquote</code> and <code>footer</code> tags to write your favorite quote with a citation of who said it.</Fragment>}\n      hint={`We didn't talk about these tags, so search Google for \"mdn blockquote\" and \"mdn footer\" to learn about them. All the info you need for this is on MDN's <blockquote> tag page`}\n      solution={`<p>Favorite quote:</p>\n<blockquote>\n  <p>Were it left to me to decide whether we should have a government without newspapers, or newspapers without a government, I should not hesitate a moment to prefer the latter.</p>\n  <footer>—Benjamin Franklin</footer>\n</blockquote>`}\n    />\n\n  </Fragment>\n}\n\nexport default HTMLPage\n","import React, { Fragment } from 'react'\nimport CodeChallenge from './CodeChallenge'\n\nfunction CSSPage() {\n  return <Fragment>\n    <h2>CSS Exercises</h2>\n    <p>In these, add CSS styles to match the example image</p>\n    <CodeChallenge\n      title='1: Text styling'\n      descriptionImg='/img/css1.jpg'\n      hint={`On PCs, the font is \"Comic Sans\" but on other platforms it's \"Comic Sans MS\". How can you make sure the correct font is displayed on all computers?`}\n      initialCode={`<style>\n\n</style>\n\n<p>Undergraduate Students Association Council Facilities Commission and Financial Supports Commission partnered with the Westwood Village Improvement Association to create the coupon code, “ILOVEWESTWOOD,” announced via social media on Oct 13. Customers can use the code in person or via phone.</p>\n<p>Twelve restaurants, including Sweetfin Poke, Nick the Greek and Pinches Tacos have signed onto the initiative so far to offer discounts to UCLA students and faculty. Students can get 20% off orders at Tocaya Organica and $0.99 fish tacos from Baja California Tacos on Wednesdays.</p>\n<p>USAC Facilities Commissioner Sachi Cooper said USAC created the coupons to make food more affordable to the UCLA community during a difficult financial time. FAC promoted the discounts on social media, designed graphics for the coupons and flyers and published ads on Twitter and Instagram.</p>\n<p>The coupon codes will also benefit the many struggling businesses in the Village, said Cooper, a third-year geography student.</p>`}\n      solution={`<style>\n  p {\n    font-family: 'Comic Sans', 'Comic Sans MS', sans-serif;\n    font-weight: bold;\n    text-align: right;\n    color: green;\n    line-height: 2rem;\n    text-decoration: underline;\n    font-size: 1.2rem;\n    font-style: italic;\n    text-shadow: 0 2px 3px red;\n  }\n</style>\n\n<p>Undergraduate Students Association Council Facilities Commission and Financial Supports Commission partnered with the Westwood Village Improvement Association to create the coupon code, “ILOVEWESTWOOD,” announced via social media on Oct 13. Customers can use the code in person or via phone.</p>\n<p>Twelve restaurants, including Sweetfin Poke, Nick the Greek and Pinches Tacos have signed onto the initiative so far to offer discounts to UCLA students and faculty. Students can get 20% off orders at Tocaya Organica and $0.99 fish tacos from Baja California Tacos on Wednesdays.</p>\n<p>USAC Facilities Commissioner Sachi Cooper said USAC created the coupons to make food more affordable to the UCLA community during a difficult financial time. FAC promoted the discounts on social media, designed graphics for the coupons and flyers and published ads on Twitter and Instagram.</p>\n<p>The coupon codes will also benefit the many struggling businesses in the Village, said Cooper, a third-year geography student.</p>`}\n    />\n\n    <CodeChallenge\n      title='2: Block styling'\n      description='Make sure there is no horizontal (or vertical) scroll within the pane, but the box should be full width'\n      hint='Remember, box-sizing is your friend. Look up box-shadow on MDN and look for \"inset\". Look up \"border-radius\" on MDN'\n      descriptionImg='/img/css2.jpg'\n      initialCode={`<style>\n</style>\n\n<div>This is my content</div>`}\n      solution={`<style>\ndiv {\n  width: 100%;\n  background-color: pink;\n  padding: 100px 0 0 50px;\n  box-sizing: border-box;\n  color: purple;\n  box-shadow: 0 0 8px rgba(0,0,0,0.5) inset;\n  border-radius: 20px;\n}\n</style>\n\n<div>This is my content</div>`}\n\n    />\n  </Fragment>\n}\n\nexport default CSSPage\n","import './App.css'\nimport {\n  HashRouter as Router,\n  Switch,\n  Route,\n  NavLink\n} from \"react-router-dom\"\nimport Home from './Home'\nimport HTMLPage from './HTMLPage'\nimport CSSPage from './CSSPage'\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <nav>\n          <h1>Daily Bruin Online Training <em>Fall 2020</em></h1>\n          <ul>\n            <li><NavLink exact={true} to='/'>Home</NavLink></li>\n            <li><NavLink to='/html'>HTML</NavLink></li>\n            <li><NavLink to='/css'>CSS</NavLink></li>\n          </ul>\n        </nav>\n        <Switch>\n          <Route path='/html'>\n            <HTMLPage />\n          </Route>\n          <Route path='/css'>\n            <CSSPage />\n          </Route>\n          <Route path='/'>\n            <Home />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"CodeDemo_wrapper__C_Lnz\",\"editorContainer\":\"CodeDemo_editorContainer__p9uO-\",\"resultContainer\":\"CodeDemo_resultContainer__2W-ru\",\"result\":\"CodeDemo_result__EJmH6\",\"title\":\"CodeDemo_title__38h0H\"};"],"sourceRoot":""}